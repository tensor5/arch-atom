--- a/script/lib/run-apm-install.js
+++ b/script/lib/run-apm-install.js
@@ -9,7 +9,7 @@
   // Set resource path so that apm can load metadata related to Atom.
   installEnv.ATOM_RESOURCE_PATH = CONFIG.repositoryRootPath;
 
-  childProcess.execFileSync(CONFIG.getApmBinPath(), [ci ? 'ci' : 'install'], {
+  childProcess.execFileSync('apm', [ci ? 'ci' : 'install'], {
     env: installEnv,
     cwd: packagePath,
     stdio: stdioOptions || 'inherit'
--- a/src/package-manager.js
+++ b/src/package-manager.js
@@ -194,19 +194,7 @@
       return configPath || this.apmPath;
     }
 
-    const commandName = process.platform === 'win32' ? 'apm.cmd' : 'apm';
-    const apmRoot = path.join(process.resourcesPath, 'app', 'apm');
-    this.apmPath = path.join(apmRoot, 'bin', commandName);
-    if (!fs.isFileSync(this.apmPath)) {
-      this.apmPath = path.join(
-        apmRoot,
-        'node_modules',
-        'atom-package-manager',
-        'bin',
-        commandName
-      );
-    }
-    return this.apmPath;
+    return '/usr/lib/node_modules/atom-package-manager/bin/apm';
   }
 
   // Public: Get the paths being used to look for packages.
