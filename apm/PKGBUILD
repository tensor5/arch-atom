# Maintainer: Nicola Squartini <tensor5@gmail.com>

pkgname=apm
pkgver=2.5.0
pkgrel=1
pkgdesc='Atom package manager'
arch=('x86_64')
url='https://github.com/atom/apm'
license=('MIT')
depends=('libsecret' 'nodejs>=10' 'npm' 'python')
makedepends=('git')
provides=('nodejs-atom-package-manager')
conflicts=('nodejs-atom-package-manager')
replaces=('nodejs-atom-package-manager')
options=(!emptydirs)
source=("${pkgname}-${pkgver}.tar.gz::https://github.com/atom/apm/archive/v${pkgver}.tar.gz"
        'apm.js'
        'no-scripts.patch'
        'use-system-npm.patch'
        'git-utils.patch')
sha512sums=('34fdd9646d9ea67731aed7560547fb74fcb2f19a2ae69dd692834dffc7e0f2d7a9b1147f774e0f1bc9d491d57755f674073268dd599fa00e41673d2150883223'
            '1f31778fca9540c7861ec13e15631f141997791e804582d1ba9e5c2a57c02ff62250b340f3166d103e7ed824fb05a993778f35e1a3575905b8582909adbfd159'
            '4ad07dcf6fca3aabdd106f092d3a159712f52c4b161c54e7ac2c1d90598b98635dc86e8e97ec6f847392110c894b0b0ffb89be9f82164cd4a377a7dc53ac7b9a'
            'd14c3465f068959580a8232b53740aa199e25b67e5c209b824ac1060aca4a6a12083cf2d495683abcc7faba4d4d1c4fe3276679c79c1754954b0eaf5e2d4eea2'
            'bf9f4023bfbdc7240e5ed8a87bc9097eb7a57b2bae44f1044098eb380b15ff8a12f92347b99b6754c6adb537b8310d1f47bdfd3e60db411e4d69d575ce70b2a6')

_apmdir='/usr/lib/node_modules/atom-package-manager'

prepare() {
  rm -rf "${srcdir}"/apm-build

  cd apm-${pkgver}

  # Use custom launcher
  rm bin/apm{,.cmd} bin/npm{,.cmd}
  rm src/cli.coffee
  install -m755 "${srcdir}"/apm.js bin/apm

  # Use system npm
  patch -Np1 -i "${srcdir}"/use-system-npm.patch

  # Don't download binary Node
  patch -Np1 -i "${srcdir}"/no-scripts.patch
  rm BUNDLED_NODE_VERSION script/*
}

build() {
  cd apm-${pkgver}

  npm update keytar  # Node 12
  npm install coffee-script
  npx coffee -c --no-header -o lib src/*.coffee
  rm -r node_modules
  npm install --user root -g --prefix="${srcdir}"/apm-build/usr $(npm pack | tail -1)

  cd "${srcdir}/apm-build/usr/lib/node_modules/atom-package-manager/node_modules/git-utils"
  patch -Np1 -i "${srcdir}/git-utils.patch"
  node-gyp rebuild
}

package() {
  cp -r "${srcdir}"/apm-build/usr "${pkgdir}"

  cd "${pkgdir}"${_apmdir}
  install -m644 "${srcdir}"/apm-${pkgver}/README.md ./

  # Install license file
  install -d -m755 "${pkgdir}/usr/share/licenses/${pkgname}"
  ln -s ../../../lib/node_modules/atom-package-manager/LICENSE.md \
     "${pkgdir}/usr/share/licenses/${pkgname}"

  # Remove occurrences of ${srcdir}
  find "${pkgdir}" -name "package.json" \
       -exec sed -e "s|${srcdir}/apm-build||" \
                 -e "s|${srcdir}/apm-${pkgver}|${_apmdir}|" \
                 -i '{}' \;

  # Remove useless stuff
  find "${pkgdir}"/usr/lib \
      -name ".*" -prune -exec rm -r '{}' \; \
      -or -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "*.mk" -exec rm '{}' \; \
      -or -path "*/git-utils/binding.gyp" -exec rm '{}' \; \
      -or -path "*/git-utils/src/*.cc" -exec rm '{}' \; \
      -or -path "*/git-utils/src/*.h" -exec rm '{}' \; \
      -or -path "*/keytar/binding.gyp" -exec rm '{}' \; \
      -or -path "*/keytar/src" -prune -exec rm -r '{}' \; \
      -or -path "*/oniguruma/binding.gyp" -exec rm '{}' \; \
      -or -path "*/oniguruma/src" -prune -exec rm -r '{}' \; \
      -or -name "appveyor.yml" -exec rm '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "binding.Makefile" -exec rm '{}' \; \
      -or -name "config.gypi" -exec rm '{}' \; \
      -or -name "deps" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "Makefile" -exec rm '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -name "obj.target" -prune -exec rm -r '{}' \; \
      -or -name "samples" -prune -exec rm -r '{}' \; \
      -or -name "scripts" -prune -exec rm -r '{}' \; \
      -or -name "test" -prune -exec rm -r '{}' \; \
      -or -name "tests" -prune -exec rm -r '{}' \;
}
