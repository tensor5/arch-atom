# Maintainer: Nicola Squartini <tensor5@gmail.com>

pkgname=apm
pkgver=2.6.0
pkgrel=1
pkgdesc='Atom package manager'
arch=('x86_64')
url='https://github.com/atom/apm'
license=('MIT')
depends=('libsecret' 'nodejs>=10' 'npm' 'python')
makedepends=('git')
provides=('nodejs-atom-package-manager')
conflicts=('nodejs-atom-package-manager')
replaces=('nodejs-atom-package-manager')
options=(!emptydirs)
source=("${pkgname}-${pkgver}.tar.gz::https://github.com/atom/apm/archive/v${pkgver}.tar.gz"
        'apm.js'
        'no-scripts.patch'
        'use-system-npm.patch'
        'git-utils.patch')
sha512sums=('514caa5703fb81036c5f99b47361a7e903615f2a046d6430fce9407c93b3cc1274bafbb9f29486a6726731ea8bcfa981a68f3f4546d282ff0551ee5ed9928c9a'
            'c02c18e00c378fc968cd593bfed3ff0636a2786fa9ef212547efc30c54576f55dc94ac503b827ec79283c5deb87a22a7046565d8c630d55ed20d0ad020f8a77f'
            'a51ec885b0cd44ba468a98b43e42cc66546031d97b43ab86be73cd15766ef7e9ae442c9e0a495215e37a83899fd256ec18708596b75ef47dbe12d3c8da2fc084'
            'a78f9b1539d3eb38f2cd760b64efc8e9dd44dd2faf41a2d85bc2b21101828bea931c7855221cc69cfda3695f979ee85f17b299878424739c96cc3e96bed5d17f'
            'bf9f4023bfbdc7240e5ed8a87bc9097eb7a57b2bae44f1044098eb380b15ff8a12f92347b99b6754c6adb537b8310d1f47bdfd3e60db411e4d69d575ce70b2a6')

_apmdir='/usr/lib/node_modules/atom-package-manager'

prepare() {
  rm -rf "${srcdir}"/apm-build

  cd apm-${pkgver}

  # Use custom launcher
  rm bin/apm{,.cmd} bin/npm{,.cmd}
  rm src/cli.coffee
  install -m755 "${srcdir}"/apm.js bin/apm

  # Use system npm
  patch -Np1 -i "${srcdir}"/use-system-npm.patch

  # Don't download binary Node
  patch -Np1 -i "${srcdir}"/no-scripts.patch
  rm BUNDLED_NODE_VERSION script/*
}

build() {
  cd apm-${pkgver}

  npm update keytar  # Node 12
  npm install coffee-script
  npx coffee -c --no-header -o lib src/*.coffee
  rm -r node_modules
  npm install --user root -g --prefix="${srcdir}"/apm-build/usr $(npm pack | tail -1)

  cd "${srcdir}/apm-build/usr/lib/node_modules/atom-package-manager/node_modules/git-utils"
  patch -Np1 -i "${srcdir}/git-utils.patch"
  node-gyp rebuild
}

package() {
  cp -r "${srcdir}"/apm-build/usr "${pkgdir}"

  cd "${pkgdir}"${_apmdir}
  install -m644 "${srcdir}"/apm-${pkgver}/README.md ./

  # Install license file
  install -d -m755 "${pkgdir}/usr/share/licenses/${pkgname}"
  ln -s ../../../lib/node_modules/atom-package-manager/LICENSE.md \
     "${pkgdir}/usr/share/licenses/${pkgname}"

  # Remove occurrences of ${srcdir}
  find "${pkgdir}" -name "package.json" \
       -exec sed -e "s|${srcdir}/apm-build||" \
                 -e "s|${srcdir}/apm-${pkgver}|${_apmdir}|" \
                 -i '{}' \;

  # Remove useless stuff
  find "${pkgdir}"/usr/lib \
      -name ".*" -prune -exec rm -r '{}' \; \
      -or -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "*.mk" -exec rm '{}' \; \
      -or -path "*/git-utils/binding.gyp" -exec rm '{}' \; \
      -or -path "*/git-utils/src/*.cc" -exec rm '{}' \; \
      -or -path "*/git-utils/src/*.h" -exec rm '{}' \; \
      -or -path "*/keytar/binding.gyp" -exec rm '{}' \; \
      -or -path "*/keytar/src" -prune -exec rm -r '{}' \; \
      -or -path "*/oniguruma/binding.gyp" -exec rm '{}' \; \
      -or -path "*/oniguruma/src" -prune -exec rm -r '{}' \; \
      -or -name "appveyor.yml" -exec rm '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "binding.Makefile" -exec rm '{}' \; \
      -or -name "config.gypi" -exec rm '{}' \; \
      -or -name "deps" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "Makefile" -exec rm '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -name "obj.target" -prune -exec rm -r '{}' \; \
      -or -name "samples" -prune -exec rm -r '{}' \; \
      -or -name "scripts" -prune -exec rm -r '{}' \; \
      -or -name "test" -prune -exec rm -r '{}' \; \
      -or -name "tests" -prune -exec rm -r '{}' \;
}
